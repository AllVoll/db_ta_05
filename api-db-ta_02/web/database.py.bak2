#database.py

import asyncpg
#import asyncpgsa
#from sqlalchemy.orm import Session
from sqlalchemy import create_engine
#from sqlalchemy.orm import sessionmaker
#from .base import Base
#rom . import models


DB_URL = "postgresql://av:password@timescale/av"

engine = create_engine(DB_URL)
#SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
#Base.metadata.create_all(bind=engine)

async def create_pool():
    return await asyncpg.create_pool(DB_URL)

async def get_db():
    async with create_pool() as pool:
        async with pool.acquire() as conn:
            async with conn.transaction():
                yield conn
